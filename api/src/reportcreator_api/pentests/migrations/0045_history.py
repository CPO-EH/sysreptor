# Generated by Django 4.2.4 on 2023-08-30 06:48

import itertools
import uuid

import django.contrib.postgres.fields
import django.core.serializers.json
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models
from django.utils import timezone

import reportcreator_api.pentests.fielddefinition.predefined_fields
import reportcreator_api.pentests.fielddefinition.validators
import reportcreator_api.pentests.models.common
import reportcreator_api.utils.crypto.fields
import reportcreator_api.utils.fielddefinition.types
import reportcreator_api.utils.models
from reportcreator_api.utils import license


def migrate_create_initial_history(apps, schema_editor):
    # Skip license limit validation to prevent DB queries in license check
    if license.check_license(skip_limit_validation=True).get('type') != license.LicenseType.PROFESSIONAL:
        return

    migration_time = timezone.now()
    model_names = [
        'PentestProject',
        'PentestFinding',
        'ReportSection',
        'ProjectNotebookPage',
        'ProjectMemberInfo',
        'ProjectType',
        'FindingTemplate',
        'FindingTemplateTranslation',
        'UploadedAsset',
        'UploadedImage',
        'UploadedProjectFile',
        'UploadedTemplateImage',
    ]
    for model_name in model_names:
        model = apps.get_model('pentests', model_name)
        history_model = apps.get_model('pentests', 'Historical' + model_name)
        for batch in itertools.batched(model.objects.all().iterator(), 500):
            history_instances = []
            for instance in batch:
                history_instances.append(history_model(
                    history_type='+',
                    history_date=migration_time,
                    history_change_reason='Initial',
                    history_user=instance.uploaded_by if hasattr(instance, 'uploaded_by') else None,
                    history_prevent_cleanup=True,
                    **{field.attname: getattr(instance, field.attname) for field in history_model._meta.fields if not field.attname.startswith('history_')},
                ))
            history_model.objects.bulk_create(history_instances)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pentests', '0044_remove_pentestproject_custom_fields_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalUploadedTemplateImage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('name', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.CharField(max_length=255), editable=True)),
                ('name_hash', models.BinaryField(db_index=True, max_length=32)),
                ('file', models.CharField(max_length=100)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('linked_object', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.findingtemplate')),
            ],
            options={
                'verbose_name': 'historical uploaded template image',
                'verbose_name_plural': 'historical uploaded template images',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUploadedProjectFile',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('name', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.CharField(max_length=255), editable=True)),
                ('name_hash', models.BinaryField(db_index=True, max_length=32)),
                ('file', models.CharField(max_length=100)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('linked_object', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.pentestproject')),
            ],
            options={
                'verbose_name': 'historical uploaded project file',
                'verbose_name_plural': 'historical uploaded project files',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUploadedImage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('name', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.CharField(max_length=255), editable=True)),
                ('name_hash', models.BinaryField(db_index=True, max_length=32)),
                ('file', models.CharField(max_length=100)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('linked_object', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.pentestproject')),
            ],
            options={
                'verbose_name': 'historical uploaded image',
                'verbose_name_plural': 'historical uploaded images',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUploadedAsset',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('name', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.CharField(max_length=255), editable=True)),
                ('name_hash', models.BinaryField(db_index=True, max_length=32)),
                ('file', models.CharField(max_length=100)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('linked_object', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.projecttype')),
            ],
            options={
                'verbose_name': 'historical uploaded asset',
                'verbose_name_plural': 'historical uploaded assets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReportSection',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('custom_fields', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder), editable=True)),
                ('section_id', models.CharField(db_index=True, editable=False, max_length=255)),
                ('status', models.CharField(choices=[('in-progress', 'In progress'), ('ready-for-review', 'Ready for review'), ('needs-improvement', 'Needs improvement'), ('finished', 'Finished')], db_index=True, default='in-progress', max_length=20)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assignee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.pentestproject')),
            ],
            options={
                'verbose_name': 'historical report section',
                'verbose_name_plural': 'historical report sections',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProjectType',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('source', models.CharField(choices=[('created', 'Created'), ('imported', 'Imported'), ('imported_dependency', 'Imported Dependency'), ('customized', 'Customized'), ('snapshot', 'Snapshot')], db_index=True, default='created', editable=False, max_length=50)),
                ('language', models.CharField(choices=[('en-US', 'English'), ('de-DE', 'German'), ('es-ES', 'Spanish'), ('fr-FR', 'French'), ('pt-PT', 'Portuguese'), ('it-IT', 'Italian'), ('nl-NL', 'Dutch'), ('da-DK', 'Danish'), ('pl-PL', 'Polish'), ('uk-UA', 'Ukrainian'), ('ro-RO', 'Romanian'), ('sk-SK', 'Slovak'), ('sl-SI', 'Slovenian'), ('el-GR', 'Greek'), ('sv-SE', 'Swedish'), ('sq-AL', 'Albanian'), ('bg-BG', 'Bulgarian'), ('hr-HR', 'Croatian'), ('et-EE', 'Estonian'), ('fi-FI', 'Finnish'), ('hu-HU', 'Hungarian'), ('lv-LV', 'Latvian'), ('lt-LT', 'Lithuanian'), ('mt-MT', 'Maltese'), ('nb-NO', 'Norwegian'), ('sr-SP', 'Serbian'), ('tr-TR', 'Turkish')], db_index=True, default=reportcreator_api.pentests.models.common.get_default_language, max_length=5)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('report_template', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('report_styles', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('report_preview_data', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder), editable=True)),
                ('report_fields', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('report_sections', models.JSONField(default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('finding_fields', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('finding_field_order', models.JSONField(default=list, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('finding_ordering', models.JSONField(default=reportcreator_api.pentests.fielddefinition.predefined_fields.finding_ordering_default, encoder=django.core.serializers.json.DjangoJSONEncoder, validators=[reportcreator_api.pentests.fielddefinition.validators.FindingOrderingValidator()])),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('copy_of', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.projecttype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('linked_project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.pentestproject')),
                ('linked_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical project type',
                'verbose_name_plural': 'historical project types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProjectNotebookPage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('note_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('title', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('text', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('checked', models.BooleanField(blank=True, null=True)),
                ('icon_emoji', models.CharField(blank=True, max_length=32, null=True)),
                ('status_emoji', models.CharField(blank=True, max_length=32, null=True)),
                ('order', models.PositiveIntegerField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assignee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.projectnotebookpage')),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.pentestproject')),
            ],
            options={
                'verbose_name': 'historical project notebook page',
                'verbose_name_plural': 'historical project notebook pages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProjectMemberInfo',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.pentestproject')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical project member info',
                'verbose_name_plural': 'historical project member infos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPentestProject',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('source', models.CharField(choices=[('created', 'Created'), ('imported', 'Imported'), ('imported_dependency', 'Imported Dependency'), ('customized', 'Customized'), ('snapshot', 'Snapshot')], db_index=True, default='created', editable=False, max_length=50)),
                ('language', models.CharField(choices=[('en-US', 'English'), ('de-DE', 'German'), ('es-ES', 'Spanish'), ('fr-FR', 'French'), ('pt-PT', 'Portuguese'), ('it-IT', 'Italian'), ('nl-NL', 'Dutch'), ('da-DK', 'Danish'), ('pl-PL', 'Polish'), ('uk-UA', 'Ukrainian'), ('ro-RO', 'Romanian'), ('sk-SK', 'Slovak'), ('sl-SI', 'Slovenian'), ('el-GR', 'Greek'), ('sv-SE', 'Swedish'), ('sq-AL', 'Albanian'), ('bg-BG', 'Bulgarian'), ('hr-HR', 'Croatian'), ('et-EE', 'Estonian'), ('fi-FI', 'Finnish'), ('hu-HU', 'Hungarian'), ('lv-LV', 'Latvian'), ('lt-LT', 'Lithuanian'), ('mt-MT', 'Maltese'), ('nb-NO', 'Norwegian'), ('sr-SP', 'Serbian'), ('tr-TR', 'Turkish')], db_index=True, default=reportcreator_api.pentests.models.common.get_default_language, max_length=5)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, db_index=True, default=list, size=None)),
                ('imported_members', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder), blank=True, default=list, size=None)),
                ('unknown_custom_fields', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True), blank=True, editable=True, null=True)),
                ('override_finding_order', models.BooleanField(default=False)),
                ('readonly', models.BooleanField(db_index=True, default=False)),
                ('readonly_since', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('copy_of', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.pentestproject')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.projecttype')),
            ],
            options={
                'verbose_name': 'historical pentest project',
                'verbose_name_plural': 'historical pentest projects',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPentestFinding',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('custom_fields', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder), editable=True)),
                ('finding_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('template_id', reportcreator_api.utils.crypto.fields.EncryptedField(base_field=models.UUIDField(blank=True, null=True), blank=True, editable=True, null=True)),
                ('status', models.CharField(choices=[('in-progress', 'In progress'), ('ready-for-review', 'Ready for review'), ('needs-improvement', 'Needs improvement'), ('finished', 'Finished')], db_index=True, default='in-progress', max_length=20)),
                ('order', models.PositiveIntegerField(db_index=True, default=0)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assignee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.pentestproject')),
            ],
            options={
                'verbose_name': 'historical pentest finding',
                'verbose_name_plural': 'historical pentest findings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFindingTemplateTranslation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('language', models.CharField(choices=[('en-US', 'English'), ('de-DE', 'German'), ('es-ES', 'Spanish'), ('fr-FR', 'French'), ('pt-PT', 'Portuguese'), ('it-IT', 'Italian'), ('nl-NL', 'Dutch'), ('da-DK', 'Danish'), ('pl-PL', 'Polish'), ('uk-UA', 'Ukrainian'), ('ro-RO', 'Romanian'), ('sk-SK', 'Slovak'), ('sl-SI', 'Slovenian'), ('el-GR', 'Greek'), ('sv-SE', 'Swedish'), ('sq-AL', 'Albanian'), ('bg-BG', 'Bulgarian'), ('hr-HR', 'Croatian'), ('et-EE', 'Estonian'), ('fi-FI', 'Finnish'), ('hu-HU', 'Hungarian'), ('lv-LV', 'Latvian'), ('lt-LT', 'Lithuanian'), ('mt-MT', 'Maltese'), ('nb-NO', 'Norwegian'), ('sr-SP', 'Serbian'), ('tr-TR', 'Turkish')], db_index=True, default=reportcreator_api.pentests.models.common.get_default_language, max_length=5)),
                ('custom_fields', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('status', models.CharField(choices=[('in-progress', 'In progress'), ('ready-for-review', 'Ready for review'), ('needs-improvement', 'Needs improvement'), ('finished', 'Finished')], db_index=True, default='in-progress', max_length=20)),
                ('title', models.TextField(db_index=True, default='')),
                ('risk_score', models.FloatField(db_index=True, default=0.0)),
                ('risk_level', models.CharField(choices=[('info', 'Info'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], db_index=True, default='info', max_length=10)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.findingtemplate')),
            ],
            options={
                'verbose_name': 'historical finding template translation',
                'verbose_name_plural': 'historical finding template translations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFindingTemplate',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('history_prevent_cleanup', models.BooleanField(db_index=True, default=False)),
                ('source', models.CharField(choices=[('created', 'Created'), ('imported', 'Imported'), ('imported_dependency', 'Imported Dependency'), ('customized', 'Customized'), ('snapshot', 'Snapshot')], db_index=True, default='created', editable=False, max_length=50)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, db_index=True, default=list, size=None)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('main_translation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pentests.findingtemplatetranslation')),
            ],
            options={
                'verbose_name': 'historical finding template',
                'verbose_name_plural': 'historical finding templates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),

        migrations.RunPython(code=migrate_create_initial_history, reverse_code=migrations.RunPython.noop),

        migrations.RemoveField(
            model_name='uploadedasset',
            name='uploaded_by',
        ),
        migrations.RemoveField(
            model_name='uploadedimage',
            name='uploaded_by',
        ),
        migrations.RemoveField(
            model_name='uploadedprojectfile',
            name='uploaded_by',
        ),
        migrations.RemoveField(
            model_name='uploadedtemplateimage',
            name='uploaded_by',
        ),
        migrations.RemoveField(
            model_name='uploadedusernotebookfile',
            name='uploaded_by',
        ),
        migrations.RemoveField(
            model_name='uploadedusernotebookimage',
            name='uploaded_by',
        ),
    ]
