# Generated by Django 5.0.8 on 2024-08-09 11:10

import itertools

import django.core.serializers.json
from django.db import migrations, models

import sysreptor.pentests.fielddefinition.predefined_fields
import sysreptor.pentests.fielddefinition.validators
import sysreptor.utils.fielddefinition.validators
from sysreptor.pentests.fielddefinition.predefined_fields import (
    FINDING_FIELDS_CORE,
    FINDING_FIELDS_PREDEFINED,
    REPORT_FIELDS_CORE,
    REPORT_FIELDS_PREDEFINED,
    finding_fields_default,
    report_sections_default,
)
from sysreptor.utils.fielddefinition.types import (
    FieldDefinition,
    parse_field_definition,
    parse_field_definition_legacy,
    serialize_field_definition,
    serialize_field_definition_legacy,
)


def migrate_field_definition(apps, schema_editor):
    def migrate_instance(pt):
        pt.finding_fields = serialize_field_definition(parse_field_definition_legacy(
            field_dict=pt.finding_fields,
            field_order=pt.finding_field_order,
        ))
        report_fields = parse_field_definition_legacy(field_dict=pt.report_fields)
        for section in pt.report_sections:
            section['fields'] = serialize_field_definition(FieldDefinition(fields=[report_fields[f_id] for f_id in section['fields']]))

    def migrate_model(model_name):
        model = apps.get_model('pentests', model_name)
        for batch in itertools.batched(model.objects.iterator(), 500):
            for instance in batch:
                migrate_instance(instance)
            model.objects.bulk_update(batch, fields=['finding_fields', 'report_sections'])

    migrate_model('ProjectType')
    migrate_model('HistoricalProjectType')


def reverse_migrate_field_definition(apps, schema_editor):
    def migrate_instance(pt):
        pt.finding_field_order = [f['id'] for f in pt.finding_fields]
        pt.finding_fields = serialize_field_definition_legacy(parse_field_definition(pt.finding_fields))

        pt.report_fields = serialize_field_definition_legacy(parse_field_definition(list(itertools.chain(*map(lambda s: s['fields'], pt.report_sections)))))
        pt.report_sections = [s | {'fields': [f['id'] for f in s['fields']]} for s in pt.report_sections]

    def migrate_model(model_name):
        model = apps.get_model('pentests', model_name)
        for batch in itertools.batched(model.objects.iterator(), 500):
            for instance in batch:
                migrate_instance(instance)
            model.objects.bulk_update(batch, fields=['finding_fields', 'finding_field_order', 'report_sections', 'report_fields'])

    migrate_model('ProjectType')
    migrate_model('HistoricalProjectType')


class Migration(migrations.Migration):
    dependencies = [
        ('pentests', '0055_comment_commentanswer'),
    ]

    operations = [
        migrations.RunPython(code=migrate_field_definition, reverse_code=reverse_migrate_field_definition),
         migrations.AlterField(
            model_name='historicalprojecttype',
            name='finding_fields',
            field=models.JSONField(default=finding_fields_default, encoder=django.core.serializers.json.DjangoJSONEncoder, validators=[sysreptor.utils.fielddefinition.validators.FieldDefinitionValidator(core_fields=FINDING_FIELDS_CORE, predefined_fields=FINDING_FIELDS_PREDEFINED)]),
        ),
        migrations.AlterField(
            model_name='historicalprojecttype',
            name='report_sections',
            field=models.JSONField(default=report_sections_default, encoder=django.core.serializers.json.DjangoJSONEncoder, validators=[sysreptor.pentests.fielddefinition.validators.SectionDefinitionValidator(core_fields=REPORT_FIELDS_CORE, predefined_fields=REPORT_FIELDS_PREDEFINED)]),
        ),
        migrations.AlterField(
            model_name='projecttype',
            name='finding_fields',
            field=models.JSONField(default=finding_fields_default, encoder=django.core.serializers.json.DjangoJSONEncoder, validators=[sysreptor.utils.fielddefinition.validators.FieldDefinitionValidator(core_fields=FINDING_FIELDS_CORE, predefined_fields=FINDING_FIELDS_PREDEFINED)]),
        ),
        migrations.AlterField(
            model_name='projecttype',
            name='report_sections',
            field=models.JSONField(default=report_sections_default, encoder=django.core.serializers.json.DjangoJSONEncoder, validators=[sysreptor.pentests.fielddefinition.validators.SectionDefinitionValidator(core_fields=REPORT_FIELDS_CORE, predefined_fields=REPORT_FIELDS_PREDEFINED)]),
        ),
        migrations.RemoveField(
            model_name='historicalprojecttype',
            name='finding_field_order',
        ),
        migrations.RemoveField(
            model_name='historicalprojecttype',
            name='report_fields',
        ),
        migrations.RemoveField(
            model_name='projecttype',
            name='finding_field_order',
        ),
        migrations.RemoveField(
            model_name='projecttype',
            name='report_fields',
        ),
    ]
