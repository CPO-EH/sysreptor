# Generated by Django 4.2.4 on 2023-08-29 13:07

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import sysreptor.utils.crypto.fields
import sysreptor.utils.models
from sysreptor.utils.utils import copy_keys


def migrate_notebookpage(apps, schema_editor):
    NotebookPage = apps.get_model('pentests', 'NotebookPage')
    ProjectNotebookPage = apps.get_model('pentests', 'ProjectNotebookPage')
    UserNotebookPage = apps.get_model('pentests', 'UserNotebookPage')
    note_fields = ['id', 'created', 'note_id', 'title', 'text', 'checked', 'icon_emoji', 'status_emoji', 'order']

    project_notes = []
    for note in NotebookPage.objects.filter(project__isnull=False).iterator():
        project_notes.append(ProjectNotebookPage(parent_id=note.parent_id, **copy_keys(note, note_fields + ['project', 'assignee'])))
    ProjectNotebookPage.objects.bulk_create(project_notes)

    user_notes = []
    for note in NotebookPage.objects.filter(user__isnull=False).iterator():
        user_notes.append(UserNotebookPage(parent_id=note.parent_id, **copy_keys(note, note_fields + ['user'])))
    UserNotebookPage.objects.bulk_create(user_notes)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pentests', '0042_notebookpage_assignee'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectNotebookPage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=sysreptor.utils.models.now, editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('note_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('title', sysreptor.utils.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('text', sysreptor.utils.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('checked', models.BooleanField(blank=True, null=True)),
                ('icon_emoji', models.CharField(blank=True, max_length=32, null=True)),
                ('status_emoji', models.CharField(blank=True, max_length=32, null=True)),
                ('order', models.PositiveIntegerField()),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pentests.projectnotebookpage')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='pentests.pentestproject')),
            ],
            options={
                'unique_together': {('project', 'note_id')},
            },
            bases=(sysreptor.utils.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserNotebookPage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=sysreptor.utils.models.now, editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('note_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('title', sysreptor.utils.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('text', sysreptor.utils.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('checked', models.BooleanField(blank=True, null=True)),
                ('icon_emoji', models.CharField(blank=True, max_length=32, null=True)),
                ('status_emoji', models.CharField(blank=True, max_length=32, null=True)),
                ('order', models.PositiveIntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pentests.usernotebookpage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'note_id')},
            },
            bases=(sysreptor.utils.models.ModelDiffMixin, models.Model),
        ),
        migrations.RunPython(code=migrate_notebookpage),
        migrations.DeleteModel(
            name='NotebookPage',
        ),
    ]
